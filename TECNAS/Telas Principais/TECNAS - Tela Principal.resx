<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAkAAAAOMDAwEjs7OxQsLCwUAAAAEQAAAA0AAAAHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAEQAAABQAAAAYAAAAGAAAABgAAAAYAAAAGAAA
        ABgAAAAYAAAAGAAAABgAAAAYAAAAIgAAACwAAAA2AAAAPwAAAEaJiYldubm5/4mJif8AAABLAAAAQwAA
        ADcAAAAoAAAAEwAAAAcAAAAAAAAAAAAAAAAAAAAAAAAADgEAAB0oGQwpQykVL0QqFTJEKhUyRCoVMkQq
        FTJEKhUyRCoVMkQqFTJEKhUyRCoVMkIoFTg+NzJDOSkcTTciEVg0IBBjNyYZbKWlpfC8vLz/pqam/zko
        HKUvHQ5nEAoFWQsLC0cXFxcvAAAAEwAAAAMAAAAAAAAAAAAAAAgSCwUcjGA+L9a5o//m1cj/59fK/+fX
        yv/n18r/59fK/+fXyv/n18r/59fK/+fXyv/n18r/r6GW/66urv+in53/pZeM/5WIff+OiYX/u7u7/7Oz
        s/+3t7f/iH95/6GRhP+dgWv/jIqJVIuLi/8dHR0WAAAAAAAAAAAAAAAAAQEADY1hPiL17un/9vHs/+XU
        xv/l1MX/5tXH/+fXyP/p2Mr/6tnL/+vbzf/r3M7/7N3P/+zdz/+ZlI//5OTk/+Li4v/BwcH/yMjI/9XV
        1f/Jycn/u7u7/7+/v//Dw8P/rKys/6qqqv/Gxsb/yMjI/2VlZf8AAAAAAAAAAAAAAAAqGg0K1rqk//bw
        7P+/lXP/vpJu/8GWc//Emnf/xp17/8mhf//MpIL/z6iG/9Griv/Tro3/1bCP/8ipjv+sqqn/5+fn/+Hh
        4f/b29v/0tLS/8vLy//ExMT/vb29/7a2tv+5ubn/ubm5/76+vv+jo6L/Hx8f/wAAAAAAAAAAAAAAAEcs
        FgDm1cj/5NLE/7uPa/++k2//wZdz/8SaeP/Hnnz/yqKA/82mhP/Qqoj/062M/9WxkP/Xs5P/2LWU/5qU
        jf/q6ur/5eXl/+Hh4f/k5OT/4uLi/9fX1//c3Nz/yMjI/7m5uf+zs7P/vr6+/411Y/8IBAIGAAAAAAAA
        AAAAAAAASCwWAOfXyv/j0cL/vI9r/7+TcP/Cl3T/xZt4/8iffP/Lo4H/zqeF/9Grif/VspL/4MSr/+PJ
        sv/Ks53/u7u7/+7u7v/p6en/7+/v/7e3t/+bjoT/oo9//5ePif/Ly8v/zMzM/7u7u//Gxsb/joeB/wwI
        BRQAAAAAAAAAAAAAAABILBYA59fK/+PRwv+8j2v/v5Nw/8KXdP/Fm3j/yJ98/8ujgf/Qqor/6tnK//37
        +v/Ly8v/tLS0/6enp//k5OT/8PDw/+/v7//Ly8v/rJeD/8ylg//JoX//xZ17/5aLgv/c3Nz/xcXF/8bG
        xv+mpqb/VlZWozk5OQAAAAAAAAAAAEgsFgDn18r/49DC/7yPa/+/k2//wZd0/8SbeP/Hnnz/zKaF//Pr
        4//69fL/48u2/56cmv/r6+v/8/Pz//b29v/09PT/9fX1/6mop//Mp4b/0a2O/9SzmP/Hnnv/rZF5/8fH
        x//R0dH/ycnJ/8vLy//ExMT/tLS0/wAAAAAAAAAASCwWAOfXyv/j0ML/u45q/76Sb//BlnP/xJp3/8ee
        e//n1cb/+fXx/9SylP/RrIr/l5SR/9fX1//m5ub/8fHx//X19f/4+Pj/ra2s/8ikhP/iy7j//v7+//n2
        8v+xnIr/zs7O/9nZ2f/R0dH/z8/P/83Nzf/BwcH/AAAAAAAAAABILBYA59fK/+LQwf+6jWn/vZFt/8CV
        cf/DmXX/yKGA//z7+f/exK//zaaE/8+ph/++oYf/sJqG/5yRh//S0tL/7e3t//Pz8//d3d3/n4+C/+3h
        1//t4df/1L+u/5qUj//s7Oz/4ODg/+Dg4P+ysrL/dHNz/1JSUv8AAAAAAAAAAEgsFgDn1sr/4s/B/7mM
        aP+8kGz/v5Nw/8KXdP/Sspf//v7+/8ynh//Lo4H/zaaE/8+ohv/Qqoj/x6WI/6ampf/p6en/6urq//Pz
        8//U1NT/pqam/6Kdmf+opqT/5ubm/+vr6//m5ub/5OTk/49/c/8MCAQUAAAAAAAAAAAAAAAASCwWAOfW
        yv/hz8D/uItm/7uOav+9km7/wJVx/9O0m//+/f3/yKB+/8mhfv/Lo4H/zKWD/+fVxf/n1cX/mpSO/+Dg
        4P/h4eH/6Ojo//Dw8P/39/f/+fn5//f39//w8PD/7e3t/+vr6//FxcX/lnJV/wwIBBQAAAAAAAAAAAAA
        AABILBYA59bK/+HOv/+3iWT/uYxo/7yPbP++k2//yaOF//7+/v/RsJX/x517/8ifff/JoX//9/Lt/9HR
        0P+5ubn/1NTU/97e3v/k5OT/5ubm/+zs7P/y8vL/9vb2//T09P/z8/P/7u7u/+zs7P+fmJP/FRMRFAAA
        AAAAAAAAAAAAAEgsFgDn1sr/4M2//7WHYv+4imb/uo1p/7yQbP+/k2//7+Xd/+7i2f/Fm3n/xZx5/8ig
        f//9/Pv/mZiX/9HR0f/R0dH/paOi/6uqqv/V1dX/6Ojo/+rq6v/x8fH/1tbW/6alpf/V1dX/8vLy/8nJ
        yf9KSkr/AAAAAAAAAAAAAAAASCwWAOfWyv/gzL7/tIRg/7aIY/+4i2b/uo1p/7yQbP/JpYj/+/n3/+fX
        yv/DmHX/zamL///////ApIz/lJGN/5mRiv+4lXf/tpN2/5SHe//T09P/4uLi/7Kxsf+fhnL/s4hn/52F
        cv+qqqr/kH9y/xANCvwAAAAAAAAAAAAAAABILBYA59bK/9/LvP+ygl3/tIVg/7aIY/+4i2b/uo1p/7yP
        a//LqY3/5NPE/8CVcf/TtZz//v7+/93Gsv/Pt6P/zq6V/8mkhv/Dmnj/ro5z/8DAwP/g4OD/o5+c/7eJ
        Zf+1h2L/tYdj/+no5/+/lXT/DAgEFAAAAAAAAAAAAAAAAEgsFgDn1sr/3su7/7B/Wv+ygl3/tIVg/7aI
        Y/+4imX/uYxo/7uOav+8kGz/vZFt/9rCrv/8+vn/9e/q//v5+P/+/v7///////79/f/Bn4P/kZGQ/6Wl
        pf+Sh37/tYZi/7OEX/+zhWD//Pv6/8KYd/8MCAQUAAAAAAAAAAAAAAAASCwWAOfWyv/dybr/rn1X/7B/
        Wv+ygl3/s4Rg/7WHYv+3iWT/uIpm/7mMaP+6jWn/4tDB/+ve0/+7j2v/u49r/7+Vc//EnoD/yqiN/7uO
        a/+0iWf/sYdm/7OFYv+zg17/sYFc/7GCXv/8+/r/wph3/wwIBBQAAAAAAAAAAAAAAABILBYA59bJ/9zI
        uf+relT/rX1X/69/Wv+xgVz/s4Ne/7SFYP+1h2L/tohk/9O3of/38u7/7uPb/7yRb/+4i2f/uItm/7iK
        Zf+3iWT/tohj/7WGYf+zhF//soJd/7CAW/+uflj/r39a//z7+v/CmHf/DAgEFAAAAAAAAAAAAAAAAEgs
        FgDn1sn/3Me4/6l3Uf+reVT/rXxW/65+WP+wgFv/sYJd/7ODXv/RtZ///v7+////////////6NrO/7WH
        Yv+1h2L/tYZh/7SFYP+zhF//soJd/7GBXP+vf1r/rn1X/6x7Vf+tfFf//Pv6/8KYd/8MCAQUAAAAAAAA
        AAAAAAAASCwWAOfWyf/bxrf/p3RO/6l2UP+qeFP/rHtV/618V/+vfln/sH9a/+jaz///////////////
        ///9+/r/tIZi/7KDXv+ygl3/sYFc/7CAW/+vf1r/rn1Y/618Vv+relT/qndS/6p5VP/8+/r/wph3/wwI
        BBQAAAAAAAAAAAAAAABILBYA5tbJ/9rFtf+lcUr/pnNN/6h1T/+pd1H/q3lT/6x6Vf+tfFb/28a1////
        //////////////Ps5v+wgFr/r39a/69+Wf+uflj/rXxX/6x7Vv+relT/qnhS/6l2UP+ndE7/qHZR//z7
        +v/CmHf/DAgEFAAAAAAAAAAAAAAAAEgsFgDm1sn/2cO0/6JuR/+kcEn/pXJL/6d0Tf+odU//qXdR/6p4
        Uv+xgl//6NvQ//39/P/z7ej/vph7/6x7Vv+se1X/rHpV/6t6VP+reVP/qnhS/6l2UP+ndU7/pnNM/6Vx
        Sv+mc03//Pv6/8KYd/8MCAQUAAAAAAAAAAAAAAAASCwWAObWyf/YwrL/oGpD/6FsRf+jbkj/pHBK/6Vy
        S/+mc03/p3RO/6h1T/+pdlD/rX1Y/6p4Uv+qd1H/qndR/6l3Uf+pd1H/qHZQ/6h1T/+ndE7/pnNM/6Vx
        Sv+jb0n/om5H/6NwSv/8+/r/wpd3/wwIBBQAAAAAAAAAAAAAAABCKBUA4s/A/97MwP+dZ0D/n2lC/6Br
        RP+hbUb/om5H/6NvSf+kcUr/pXJL/6ZyTP+mc03/pnNN/6d0Tf+nc03/pnNN/6ZzTP+lckz/pXFL/6Rw
        Sf+jb0j/om1H/6FsRf+fakP/pnVS//79/f+6jmz/AwEADwAAAAAAAAAAAAAAABsRCADFn4H//Pv6/72Z
        f/+ga0X/oGxF/6FtR/+ib0n/o3BK/6RxS/+lckz/pXNN/6ZzTv+mdE7/pnRO/6Z0Tv+mc07/pnNN/6Vy
        Tf+lckz/pHFL/6NvSf+ibkj/oW1G/6V0UP/dy77/+PPv/4BSMP8AAAAAAAAAAAAAAAAAAAAAAAAAAF47
        HwjZv6v//v7+//38+//8+/r//Pv6//z7+v/8+/r//Pv6//z7+v/8+/r//Pv6//z7+v/8+/r//Pv6//z7
        +v/8+/r//Pv6//z7+v/8+/r//Pv6//z7+v/8+/r//v39//jz7/+3imj/IhUK/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQAAAEsvFpmgb0z/v5V1/8KYd//CmHf/wph3/8KYd//CmHf/wph3/8KYd//CmHf/wph3/8KY
        d//CmHf/wph3/8KYd//CmHf/wph3/8KYd//CmHf/wph3/8KYd/+6jmz/gFIw/yIVCv8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBAIADQcEGQ0HBBkNBwQZDQcEGQ0HBBkNBwQZDQcEGQ0H
        BBkNBwQZDQcEGQ0HBBkNBwQZDQcEGQ0HBBkNBwQZDQcEGQ0HBBkNBwQZDQcEGQMBAA8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///gD/AAAAHgAAAAwAAAAcAAAAHAAAAB4AAAAeAAAAHgAAAB4AAAAOAA
        AADgAAAA4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAA
        AAHgAAAB4AAAA+AAAAPwAAAH/gAAH/////8=
</value>
  </data>
</root>